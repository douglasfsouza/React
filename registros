Begin on 2022-03-18

instalar o react:
   npm install -g create-react-app

Criar um projeto
  npx create-react-app react01
Iniciar
  cd react01
  npm start
  
abrir um projeto pelo comand window:
  code .
  
Componentes
   -stateless component
   -class component
   
Props x States
  Props sao estaticas
  States sao mutaveis
  
componentDidMount
  executa automaticamente apos o componente ser montado
  Este é o método que é executado depois que o componente foi montado no DOM


  
componentDicUpdate
  executa automaticamente apos o componente ser atualizado
  
Ciclo de vida dos componentes
  - Inicializacao
  - Montagem
  - Atualizacao
  - Desmontagem
  
 - Inicialização
Nesta fase, o componente React se prepara para sua inicialização, configurando os estados iniciais e props padrões se houverem.

- Montagem:
Depois de preparar com todas as necessidades básicas, estado e props, o nosso Componente React está pronto para ser montado no DOM do navegador.

componentWillMount() 
  É executado quando o componente estiver prestes a ser montado no DOM da página. Assim, após esse método ser executado o componente irá criar o nó no navegador. Todas as coisas que você deseja fazer antes do componente ser montado, devem ser definidas aqui.

 Atualização
    Esta fase começa quando o componente React já nasceu no navegador e cresce recebendo novas atualizações. O componente pode ser atualizado de duas maneiras, através do envio de novas props ou a atualização do seu estado.

componentDidUpdate() 
  É chamado imediatamente após a atualização.
  
componentWillUpdate() 
    É executado somente quando shouldComponentUpdatedevolver true.
	
Desmontagem
   Nesta fase, o componente não é mais necessário e será desmontado do DOM. O método que se chama nesta fase é o: componentWillUnmount()

para funcionar no linux:   
     sudo apt-get install nginx
	 entrar na pasta do projeto  
     npm install --save
	 npm run build
	 npm start
	 
Hooks:
   - Diponivel apartir da versao 16.4 do React
   - Utilizar funcoes e não componentes
       import {useState}
   - Menos verboso
   - as funcoes usam state
   - funcoes dentro de funcoes
   -UseEffect 
       Substitui os processos de ciclo de vida, ex didupdate, disamount..
   useEffect(funcao a ser chamada, variavel a ser monitorada)
   
 Rotas
   npm install react-router-dom
   import {BrowserRouter, Routes, Route} from 'react-router-dom';
   import {Link} from 'react-router-dom';
   routes.js:
        import React from "react";
		import {BrowserRouter, Routes, Route} from 'react-router-dom';
		import Home from './pages/Home';
		import Sobre from './pages/Sobre';
		import Contato from './pages/Contato';

		function RoutesApp(){
			return(
				<BrowserRouter>
					<Routes>
						<Route path='/' element={<Home/>} />
						<Route path='/sobre' element={<Sobre/>} />
						<Route path="/contato" element={<Contato/>}/>
					</Routes>
				</BrowserRouter>
			)
		}

		export default RoutesApp;
    *** fim de routes.js
   exemplo de App.js:
         import React from "react";
		 import RoutesApp from './routes';
		function App() {
		  return (
			<div >
				<RoutesApp/>
			</div>
		  );
		}

		export default App;

		** fim de App.js

   exemplo de Sobre.js:
        import React from "react";
		import {Link} from 'react-router-dom';
		function Sobre(){
			return(
				<div>
					<h1>Pagina Sobre a Empresa</h1>
					<Link to='/'>Home</Link> <br/>
					<Link to='/contato'>Contato</Link>
				</div>
				
			)
		}

		export default Sobre;
		** fim de Sobre.js
   
 axious
    npm install axious
	   uma alternativa melhor para o fetch
	   
Gravar no localStorage:
 localStorage.setItem('task',JSON.stringify(tarefa));
Receperar do localStorage:
   const taskStorage = localStorage.getItem('task');
    if (taskStorage){
      setTarefa(JSON.parse(taskStorage));
    }  
	
Navegar para outra pagina
  useNavitate
     ex. const navigate = useNavitate();
	     navigate("/", {replace:true});
		 
React-toastify
   para mostrar mensagens toast
   npm install --save react-toastify
   no App.js:
      import {ToastContainer} from 'react-toastify';
	  import 'react-toastify/dist/ReactToastify.css';  
	  <ToastContainer autoClose={3000}/>
   usar:
      toast.success("minha mensagem");
	  toast.warn("outra mensagem";

build:
  Hospedagem gratuita em netlify
  npm run build
     cria a pasta build
  se usa roteamento no projeto:
    criar o arquivo public/_redirects
	   preencher o arquivo _redirects com:
	       /* /index.html 200
	gerar o build novamente
       npm run build
deploy:
  npm install -g netlify-cli	
  via linha de comando:
      netlify deploy
          cria como draft
      netlify deploy prod
         para subir pra producao
ContextApi:
   user.js:
        import {useState, createContext} from 'react';
		export const UserContext = createContext({});

		function UserProvider({children}){
			const [alunos,setAlunos] = useState('Nico');
			return(
				<UserContext.Provider value={{alunos,setAlunos}}>
					{children}
				</UserContext.Provider>
			)
		}

		export default UserProvider;  
		***********************
		App.js:
		    import { useState } from "react";
			import Alunos from "./Alunos";
			import UserProvider from "./contexts/user";

			function App() {  
			  return (
				<UserProvider>
				  <div >
					<h1>ESCOLA</h1>
					<h2/>
					  <Alunos/>
				  </div>
				</UserProvider>    
			  );
			}

			export default App;
			***************************
			nome.js:
				import { useContext } from "react";
				import { UserContext } from "../contexts/user";

				function Nome(){
					const {alunos,setAlunos} = useContext(UserContext);
					return(
						<div>
							<span style={{color:'red'}}>Nome:{alunos}</span>
							<br/>
							<button onClick={()=>setAlunos('Math')}>Mudar</button>
							<br/>             
						</div>
					)
				}
				export default Nome;
				******************************
Icones:
  - npm install react-icons
  - import {iconname} from 'react-icons/fi';
  
datas:
  npm install date-fns
  import {format} from 'date-fns';
  format(new Date(),'dd/MM/yyyy');
  
 Versao do react-router-dom com switch:
    npm install react-router-dom@5

Instalar componentes de estilos:
  npm install styled-components
styles.js:
  import styled from 'styled-components';
  export const Title = styled.h1`
     color: #FF0000
  `;
 index.js:
   import {Title} from './styles';
   return(
        <div>
            <Title/>
        </div>
    )
  